<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zs.dao.ItCommonUserMapper" >
  <resultMap id="BaseResultMap" type="com.zs.entity.ItCommonUser" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="USERNUMBER" property="usernumber" jdbcType="VARCHAR" />
    <result column="USERPASSWORD" property="userpassword" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="R_ID" property="rId" jdbcType="VARCHAR" />
    <result column="IS_DELETE" property="isDelete" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USERNUMBER, USERPASSWORD, NAME, R_ID, IS_DELETE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zs.entity.ItCommonUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from IT_COMMON_USER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from IT_COMMON_USER
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal" >
    delete from IT_COMMON_USER
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.zs.entity.ItCommonUserExample" >
    delete from IT_COMMON_USER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zs.entity.ItCommonUser" >
    insert into IT_COMMON_USER (ID, USERNUMBER, USERPASSWORD, 
      NAME, R_ID, IS_DELETE
      )
    values (#{id,jdbcType=DECIMAL}, #{usernumber,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{rId,jdbcType=VARCHAR}, #{isDelete,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zs.entity.ItCommonUser" >
    insert into IT_COMMON_USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="usernumber != null" >
        USERNUMBER,
      </if>
      <if test="userpassword != null" >
        USERPASSWORD,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="rId != null" >
        R_ID,
      </if>
      <if test="isDelete != null" >
        IS_DELETE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="usernumber != null" >
        #{usernumber,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="rId != null" >
        #{rId,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zs.entity.ItCommonUserExample" resultType="java.lang.Integer" >
    select count(*) from IT_COMMON_USER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update IT_COMMON_USER
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.usernumber != null" >
        USERNUMBER = #{record.usernumber,jdbcType=VARCHAR},
      </if>
      <if test="record.userpassword != null" >
        USERPASSWORD = #{record.userpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.rId != null" >
        R_ID = #{record.rId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        IS_DELETE = #{record.isDelete,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update IT_COMMON_USER
    set ID = #{record.id,jdbcType=DECIMAL},
      USERNUMBER = #{record.usernumber,jdbcType=VARCHAR},
      USERPASSWORD = #{record.userpassword,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      R_ID = #{record.rId,jdbcType=VARCHAR},
      IS_DELETE = #{record.isDelete,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zs.entity.ItCommonUser" >
    update IT_COMMON_USER
    <set >
      <if test="usernumber != null" >
        USERNUMBER = #{usernumber,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        USERPASSWORD = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="rId != null" >
        R_ID = #{rId,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zs.entity.ItCommonUser" >
    update IT_COMMON_USER
    set USERNUMBER = #{usernumber,jdbcType=VARCHAR},
      USERPASSWORD = #{userpassword,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      R_ID = #{rId,jdbcType=VARCHAR},
      IS_DELETE = #{isDelete,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
</mapper>